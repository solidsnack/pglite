#!/bin/bash
set -o errexit -o nounset -o pipefail
function usage {
cat <<USAGE
 USAGE: ...database-path.../setup <initd-arguments>*
        ...database-path.../setup --reflow <initd-arguments>*

  Sets up an embedded database instance. If the database instance has been set
  up already, skips setup (but does not signal an error).

  To set up the database afresh even if it has been set up already, pass the
  \`--reflow\` option. This will initialize the database or delete and
  reinitialize it, as appropriate.

USAGE
}

function setup {
  if [[ -d $self/db && ${1:-} != --reflow ]]
  then
    log "Doing nothing because database directory exists: $self/db"
    exit 0
  fi

  initialize
}

function initialize {
  trap finalize EXIT

  mkdir -p info
  [[ -s info/token ]] || token > info/token
  [[ -s info/t ]]     || t     > info/t

  local initdb_options=( --auth trust
                         --username postgres
                         --nosync
                         --locale en_US.UTF-8 )
  initdb -D "$self"/db "${initdb_options[@]}" "$@"

  setup_confd

  # Touch the file so that we can tail it, before any logger has run.
  touch "$self"/log
  tail -qF "$self"/log &

  ./start
  init_database_and_user

  kill %1
  wait %1 2>/dev/null || true
}

function setup_confd {
  local conf="$self"/db/postgresql.conf

  mkdir -p "$self"/db/conf.d

  # Additional configurations are handled by putting them in conf.d, so that
  # the main DB conf file can retain the default settings. Use of include_dir
  # limits this software to PG 9.3 and above.
  if egrep -q "^include_dir = 'conf[.]d'" "$conf"
  then :
  else
    local code=$?
    if [[ $code -eq 1 ]]                      # Indicates "no match", per POSIX
    then
      out "include_dir = 'conf.d'" >> "$conf"
    else
      return $code
    fi
  fi
}

function finalize {
  local code=$?
  ./stop -m fast -w 2>/dev/null || true
  kill %1 2>/dev/null || true
  exit $code
}

function init_database_and_user {
./sql --admin --errexit <<SQL
CREATE ROLE "$role" WITH SUPERUSER LOGIN REPLICATION;
CREATE DATABASE "$role" WITH OWNER "$role";
SQL
}

source "$(dirname "${BASH_SOURCE[0]}")"/main
main "$@"
