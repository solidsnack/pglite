#!/bin/bash
set -o errexit -o nounset -o pipefail
function usage {
cat <<USAGE
 USAGE: ...database-path.../start <pg_ctl-arguments>*

  Start the database server, if not running. Any arguments are passed directly
  to \`pg_ctl\`. For example:

    -w

  to wait for startup. If no arguments are passed, the default set is:

    ${default_arguments[@]}

USAGE
}

default_arguments=( -w )

function start {
  if ./status --is-running
  then
    log 'Server is running.'
  else
    log 'Starting server...'
    rm -rf "$tmp"
    mkdir -p "$tmp"
    handle_var
    apply_configuration
    ctl start "${@:-${default_arguments[@]}}"
  fi
}

function apply_configuration {
  for f in info/etc/pg/*
  do
    [[ -f $f ]]
    local var="${f##*/}"
    out "$var = $(< "$f")"
  done > "$self"/db/conf.d/000-base-settings.conf

  for f in info/var/pg/*
  do
    [[ -f $f ]]
    local var="${f##*/}"
    out "$var = $(< "$f")"
  done > "$self"/db/conf.d/000-dynamic-settings.conf
}

function handle_var {
  rm -rf "$self"/info/var/*
  maybe_assign_port
}

function maybe_assign_port {
  local port=

  serves_on_random_tcp_port || return 0

  if port="$(random_free_tcp_port)"
  then
    out "$port" > info/var/pg/port
    out 'localhost' > info/var/pg/listen_addresses
    setup port="$port"
    for f in url/admin url/client jdbc/admin jdbc/client
    do
      [[ -s info/etc/$f ]] || continue
      sed "s|localhost:0/|localhost:$port/|" < info/etc/"$f" > info/var/"$f"
    done
  else
    exit $?
  fi
}

source "$(dirname "$0")"/main
main "$@"
